---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import "../../styles/markdown.css";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blogs");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout
  title={entry.data.title}
  activeLink="Blog"
  description={entry.data.description}
  keywords={entry.data.tags}
>
  <div class="flex mb-12 justify-center items-center">
    <Image
      src={entry.data.image.url}
      alt={entry.data.image.alt}
      width={678}
      class="rounded-lg md:max-w-3/4 md:w-3/4 w-full max-w-full"
    />
  </div>

  <article class="markdown">
    <Content />
  </article>

  <script>
    function blankLinks() {
      const links = document.querySelectorAll(".markdown a");
      links.forEach((link) => {
        link.setAttribute("target", "_blank");
      });
    }

    // Need to make sure that Astro refreshes this when re-rendering on a new page
    document.addEventListener("astro:after-swap", () => {
      blankLinks();
    });

    blankLinks(); // Run on initial page load
  </script>
</Layout>
